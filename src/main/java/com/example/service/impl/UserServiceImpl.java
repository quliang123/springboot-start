package com.example.service.impl;
/*
 * @author 瞿亮
 * @description //TODO $
 * @date $ $
 **/


import com.example.mapper.UserMapper;
import com.example.mapper.UserMapperCustom;
import com.example.pojo.SysUser;
import com.example.service.UserService;
import com.github.pagehelper.PageHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.thymeleaf.util.StringUtils;
import tk.mybatis.mapper.entity.Example;

import java.util.List;

@Service
public class UserServiceImpl implements UserService {


    @Qualifier("userMapper")
    @Autowired
    private UserMapper userMapper;

    @Qualifier("userMapperCustom")
    @Autowired
    private UserMapperCustom userMapperCustom;


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param id
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.REQUIRED)
    @Override
    public int deleteByPrimaryKey(Object id) {
        return userMapper.deleteByPrimaryKey(id);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param record
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.REQUIRED)
    @Override
    public int insert(SysUser record) {
        return userMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param record
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.REQUIRED)
    @Override
    public int insertSelective(SysUser record) {
        return userMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param o
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.SUPPORTS)
    @Override
    public SysUser selectByPrimaryKey(Object o) {
        return userMapper.selectByPrimaryKey(o);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param record
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.REQUIRED)
    @Override
    public int updateByPrimaryKeySelective(SysUser record) {
        return userMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student
     *
     * @param record
     * @mbggenerated Sat Aug 25 01:12:38 CST 2018
     */
    @Transactional(propagation = Propagation.REQUIRED)
    @Override
    public int updateByPrimaryKey(SysUser record) {
        return userMapper.updateByPrimaryKey(record);
    }

    @Transactional(propagation = Propagation.SUPPORTS)
    @Override
    public List<SysUser> queryStudentList(Object o) {
        return userMapper.select((SysUser) o);
    }

    @Transactional(propagation = Propagation.SUPPORTS)
    @Override
    public List<SysUser> queryStudentListPage(SysUser user, Integer pageIndex, Integer pageSize) {
        PageHelper.startPage(pageIndex, pageSize);

        Example example = new Example(SysUser.class);
        Example.Criteria criteria = example.createCriteria();

//        SysUser user = (SysUser) o;
        if (!StringUtils.isEmptyOrWhitespace(user.getCity())) {
            criteria.andLike("city", "%" + user.getCity() + "%");
        }

        example.orderBy("registTime").asc();

        List<SysUser> userList = userMapper.selectByExample(example);
        return userList;
    }
    @Transactional(propagation = Propagation.SUPPORTS)
    @Override
    public SysUser queryUserSimplyInfoById(String id) {
        return (SysUser) userMapperCustom.queryUserSimplyInfoById(id).get(0);
    }
}